10장 N차원 배열 다루기
 1절 numpy 패키지
  1.1 배열 속성
	dtype : 요소들의 type
	itemsize : 요소의 저장 사이즈 (byte로)
	ndim : dimension(차원)의 수 (축수)
	size : 요소 갯수
	shape : 배열의 구조 (return 값은 tuple)
  1.2 배열타입 변경
	astype(타입)
  1.3 배열 저장
	pkl(객체,배열,머신러닝모델) : dump, load
	npy(numpy 전용 포멧) : save, load
 2절 numpy 배열
  2.1 array함수 : np.array(obj, dtype, copy=T/F) : obj를 배열로 전환
  	인덱싱 : 배열[axis=0,axis=1, ...]
	슬라이싱 : 배열[axis0_from:axis0_to:axis0_end, axis1_from:axis1_to:axis1_end, ....]
  2.2 기본값이 있는 배열 만들기
	np.zeros((배열축), dtype)
	np.ones((배열축), dtype)
	np.full((배열축), 기본값, dtype)
	np.empty((배열축), dtype)
  2.3 랜덤값을 받는 배열 만들기
	np.random.random((배열축)) : 0~1미만의 균등분포 랜덤값
	np.random.uniform(low=0, high=1, size=(배열축)) : low~high미만의 균등분포 랜덤값
	np.random.normal(loc=0.0, scale=1.0, size=(배열축)) : 평균 loc, 표준편차 scale인 정규분포 랜덤값
	np.random.rand(n) : 균등분포의 1차원 난수 배열(난수 n개)
	np.random.rand(n) : 표준정규분포 1차원 난수 배열(난수 n개)
  2.4 연속된 값을 갖는 1차원 배열 만들기
	np.arange(from, to, by, dtype) : from부터 to앞까지 by씩 건너뛴 값으로 1차원 배열
	np.linspace(from, to, num) : from부터 to까지 num개를 1차원 배열
  2.5 배열의 차원변경
	reshape(배열축) : 배열축에 -1이 있으면 -1 매개변수는 자동으로 계산되어 차원을 변경한다 (배열 변환 X)
	resize(배열축) : -1 사용 불가, 배열축으로 배열 차원 변경 (배열 변환 O)
	T(), transpose() : 전치행렬로 변환
 4절 복사와 뷰
  4.1 할당 : 배열의 주소를 복사. 복사된 배열이 바뀌면 기존 배열도 바뀜
	arr1 = arr2
  4.2 얕은복사 (뷰) : 데이터는 놔두고 틀만 복사
	 reshape과 같은 함수로 arr1과 arr2를 다르게 할수 있으나 안의 데이터가 바뀌면 기존 배열이 바뀜
	arr1 = arr2.view()
  4.3 깊은복사 : 데이터 전체를 다시 복사하여 새 객체를 만듬
	arr1 = arr2.copy()
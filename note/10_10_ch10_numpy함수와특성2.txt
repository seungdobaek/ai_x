10장 N차원 배열 다루기
 2절 numpy 배열
  2.7 배열 연산
	요소별연산, 행렬곱(@,dot, 단위행렬:np.eye), 집계함수 (sum, min, max, mean, var, std)
  2.8 범용함수 
	(np.add, np.multiply, np.subtract, np.sqrt), 
  2.9 브로드캐스팅

 3절 배열합치기/분리하기
  3.1 슬라이싱 (리스트와 비슷)
  3.2 배열 합치기
	np.vstack(tup)
	np.hstack(tup
	np.dstack(tup) : 열끼리 합치기
	np.column_stack(tup) : 1차원 배열을 열단위로 2차원 배열로 합침
	np.row_stack(tup) : vstack과 동일
	stack(tup, axis)
  3.3 r_, c_
	r_[a,b,c] : row 단위로 쌓음
	c_[a,b,c]  : column 단위로 쌓음
	1차원배열[:, np.newaxis] == 1차원배열.reshape(-1,1) == np.expand_dims(a, axis=1)
		1차원 배열을 2차원 열 벡터로
  3.4 배열분리하기
	vsplit(ary, indices_or_sections) : 첫번째 축따라 분할
	hsplit(ary, indices_or_sections) : 두번째 축따라 분할
	dsplit(ary, indices_or_sections) : 3차원 이상에서 세번째 축따라 분할
	split(ary, indices_or_sections, axis=?)
	array_split(ary, indices_or_sections, axis=?)
 5절 고급 인덱싱
  5.1 인덱스 배열로 인덱싱
	arr[배열]
	arr[2차원 배열] : 배열의 shape과 동일하게 인덱싱 가능
  5.2 논리 배열을 이용한 인덱싱
	arr[논리배열] : 논리배열이 True인 값들만 리턴

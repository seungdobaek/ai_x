11장 데이터프레임과 시리즈
 8절기초통계 분석
	df.기초통계분석함수()
   기초통계분석함수 종류:
	count, min, max, sum, cumsum(누적합), cumprod(누적곱)
	mean, median, std, var, quantile (분위수)
	descirbe (요약통계랑)
	cov(공분산), corr(상관계수)
 9절 데이터 그룹화 및 집계
  9.1 groupby
	df.groupby(by=[그룹핑할 열])[[함수적용해서출력할열들]].기초통계함수()
		[[함수적용해서출력할열들]] 생랼시 모든열에 적용
  	df.groupby(by=[그룹핑할 열], as_index=False)[[함수적용해서출력할열들]].기초통계함수()
		as_index=False : index를 컬럼으로 편입
	df.pivot_table(index='그룹화할열', values=[함수적용해서출력할열들], aggfunc='기초통계함수')
		values 생략시 모든 열 출력
		aggfunc의 경우 mean이 기본값
  9.2 다중열 그룹화
 	df.groupby(by=[그룹핑할 열])[[함수적용해서출력할열들]].기초통계함수()
		그룹핑할열이 리스트일시 다중열을 기준으로 그룹한다
 10절 데이터 구조 변경
  10.1 melt (와이드포맷 -> 롱포맷)
	df.melt(id_vars=[melt하지 않을 컬럼명], var_name='컬럼의 이름', value_name='커럼값들의 이름')
  10.2 pivot_table(롱포맷 -> 와이드포맷)
	df.pivot_table(index=[그룹화할 열이름])
 11절 데이터프레임 함수 적용시키기
	apply(func, axis) : 데이터프레임이나 시리즈 모두 적용 가능
    		시리즈의 경우 axis를 적을 필요 X
    		데이터프레임의 경우 axis=0 열별(기본값), axis=1 행별
 	applymap(func) : 각 요소별로 적용 (데이터프레임에서만 가능)
	map(func) : 각 요소별로 적용 (1차원 시리즈에서만 가능)
